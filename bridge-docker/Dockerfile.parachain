FROM debian:bullseye-slim AS rust
# Set environment variables
ENV RUSTUP_HOME="/opt/rustup"
ENV CARGO_HOME="/opt/cargo"
ENV PATH="$PATH:$CARGO_HOME/bin"
ENV CARGO_BUILD_DEP_INFO_BASEDIR="."
ENV CC=clang-13
ENV CXX=clang++-13
# Install dependencies
RUN apt-get update && \
    apt-get install --no-install-recommends -y \
    ca-certificates apt-transport-https gnupg \
    libssl-dev pkg-config \
    curl jq \
    protobuf-compiler \
    git binaryen \
    make cmake libssl-dev \
    software-properties-common && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
RUN curl -s https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
    echo "deb http://apt.llvm.org/bullseye/ llvm-toolchain-bullseye-13 main" >> /etc/apt/sources.list.d/llvm-toochain-bullseye-13.list && \
    echo "deb-src http://apt.llvm.org/bullseye/ llvm-toolchain-bullseye-13 main" >> /etc/apt/sources.list.d/llvm-toochain-bullseye-13.list && \
    apt-get -y update && \
    apt-get install -y --no-install-recommends \
    clang-13 lldb-13 lld-13 libclang-13-dev llvm-13 && \
    update-alternatives --install /usr/bin/cc cc /usr/bin/clang-13 100 && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
# Install rust
ENV RUST_NIGHTLY_VERSION=nightly-2023-03-21
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain stable && \
    rustup toolchain install ${RUST_NIGHTLY_VERSION} && \
    rustup target add wasm32-unknown-unknown && \
    rustup target add wasm32-unknown-unknown --toolchain ${RUST_NIGHTLY_VERSION} && \
    rm -rf "${CARGO_HOME}/registry" "${CARGO_HOME}/git"
RUN cargo install cargo-chef

# generate recipe.json for dependency caching
FROM rust AS planner
WORKDIR /app
COPY Cargo.lock /app
COPY Cargo.toml /app
COPY pallets /app/pallets
COPY runtime /app/runtime
COPY node /app/node
COPY parachain-common /app/parachain-common
COPY parachain-gen /app/parachain-gen
RUN cargo chef prepare --recipe-path recipe.json

FROM rust AS builder
WORKDIR /app
COPY --from=planner /app/recipe.json recipe.json
# cache dependencies build
RUN cargo chef cook --release --recipe-path recipe.json
# build
COPY Cargo.lock /app
COPY Cargo.toml /app
COPY pallets /app/pallets
COPY runtime /app/runtime
COPY node /app/node
COPY parachain-common /app/parachain-common
COPY parachain-gen /app/parachain-gen
RUN cargo build --release --bin parachain-collator

# runtime
FROM debian:bullseye-slim
RUN apt-get update && \
    apt-get install --no-install-recommends -y \
    jq && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
COPY --from=builder /app/target/release/parachain-collator /usr/local/bin

ENTRYPOINT ["parachain-collator"]